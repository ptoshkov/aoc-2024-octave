data = [
"#############################################################################################################################################";
"#...#.......#.....#.........#.....#.....#.............#...#.....#.......#...#.........#.........#...#...........#.......#.........#...#....E#";
"#.#.#.###.#.#####.#.###.#####.###.#.###.#.#######.#####.#.#.#.#.#.#####.#.#.#.#.#####.#####.#.#.#.###.###.#####.#.#.###.#.#######.#.#.#.#.#.#";
"#.............#...#.#...#...#.#.#.#.#...#.#.....#.#...#.#...#.#.#.#...#...#.#.#.....#.....#.#.#...#...#.#.....#.#.#.#.#.#...#.....#.....#.#.#";
"#.###.#.#.###.#.###.#.###.#.#.#.#.#.#.#.#.#.###.#.#.#.#.#####.#.#.###.#####.#.#.#.#######.###.#####.###.#####.#.#.#.#.#.#.#.#.###########.#.#";
"#...#...#.#.#.#.....#.#...#...#.#...#.#.#...#...#...#...#...#.#...#.......#.#...#.#...#...#...#...#.....#.#...#.#.#.#...#.#...#...........#.#";
"###.#.###.#.#.#####.#.#.#######.#.#.#.#.#####.#####.#####.#.#.#####.###.#.#.###.#.#.#.#.###.###.#.#####.#.#.#.###.#.###.#.#.#.#####.#######.#";
"#...#.#...#.#.....#.#...............#.........#...#.......#.#.....#.....#.#.#...#.#.#...#...#...#...#...#.#.#.#...#...#.#.#.#.....#...#...#.#";
"#.###.###.#.#.###.#########.#####.#####.#######.#.###.#####.#####.#####.###.#.###.#.#####.#.#.#####.#.###.#.###.#####.#.###.#####.#.#.#.#.#.#";
"#...#.....#.........#.....#.#.....#...#.#.....#.#.........#.....#.#...#...#...#...#.#...........................#.....#...#.#.....#.#.#.#.#.#";
"###.#.#.#####.#####.#.###.###.###.#.#.#.###.###.#####.###.#####.#.#.#.#.#.#####.#.#.#############.#.#####.#######.#######.#.#.#####.#.#.#.#.#";
"#...#...#.....#...#.#.#.#...#.#.#...#.#.....#...#.........#.....#.#.#.#.#.......#.#...#.........#.#.....#.......#.....#.#...#.#.............#";
"#.###.###.###.#.#.#.#.#.###.#.#.#.###.#.#.###.###.###.#####.#####.#.#.#.#.#######.###.#.#######.#.#####.#######.#####.#.#####.#######.###.###";
"#.......#.#.#...#.#...#...#...#...#...#...#...#.....#.....#.....#...#.#...#.......#.#...#.....#.#.#.....#.....#...#...#.....#.......#...#...#";
"#####.#.#.#.#.###.#####.#######.#.#.#######.#######.#.###.#####.#####.#.#######.###.#####.###.#.#.#.###.###.###.###.###.###.#######.###.#####";
"#.....#...#...#...#.....#...........#.......#...#...#.#.#.....#...#...........#.........#...#...#.#.#.......#...#...#.....#.#.....#...#.....#";
"#.#.#.#####.#.#.###.###.#.#####.#####.#.#####.#.#.###.#.#####.#.###.###.#####.###.#########.#######.#.#######.#.#.###.###.###.###.###.#####.#";
"#.#.#...#.....#.#.....#...#...#.....#.#.#.....#.#.....#.............#.......#.#...........#.#.......#...#...#.#.#...#...#...#.#.#...#.......#";
"#.#.#.###.###.#.#######.###.#.#####.###.#.#####.#.#############.#######.#####.#.###.#####.#.###.#.#######.#.#.#.###.#######.#.#.###.#######.#";
"#.#.......#...#.......#...#.#.#...#.....#.....#.#.#.....#...#.........#.#.....#.#.#.#.#...#...#.#...#.........#.#...#.....#...#...#...#...#.#";
"#.#########.#.#######.#.###.#.#.#.#####.#####.#.#.#.###.#.#.#.#######.###.#####.#.#.#.#.#####.#####.#.#########.#.###.###.###.###.#.#.#.#.#.#";
"#.#...#.....#.#.......#.#...#.#.#...#.#.#.....#.#.#.#.#...#.#...#...#.....#...#...#.........#.....#.#...........#.....#.#...#.....#.#...#.#.#";
"#.#.#.#.#.#.#.#.#######.#.###.#.###.#.#.#.#####.###.#.#####.###.###.#######.#.###.###.###.#.#####.#.#######.#####.#.###.###.#####.#.#####.#.#";
"#.#.#.#.#...#...#...#...#...#...#.#.#...#.#...#...#.#.....#...#...#...#.....#...#.#.#.#...#.....#.#.........#.....#.#.....#.....#.#.#.....#.#";
"#.#.###.###.#.###.#.#.###.#.#####.#.#.###.###.###.#.#####.###.#.#.#.#.#.#####.#.#.#.#.###.#####.#.#######.###.###.#.#.#.#######.#.#.#.#####.#";
"#.#...#...#.#.....#.#.#...#.......#.#.#...#.....#.......#...#.#.#.#.#...#.....#...#.#...#...#...#.#.....#...#.....#.#.#.#...............#...#";
"#.###.###.###.#####.###.#####.#####.###.###.###########.#.###.###.#######.#####.###.###.###.#.#.#.#.###.###.#.###.#.#.###.#######.#.#####.###";
"#.#.....#...#.......#...#.....#.........#...#.....#...#.#...#...#...#...#...#...#.....#.....#.#.#.....#...#.#...#.#.#...#.....#...#.........#";
"#.#.###.###.#.#####.#.#####.###.###.#.#####.#.###.#.#.#.#.#.###.#.#.#.#.###.#.###.#.#####.###.#.#####.###.#.#.#.###.###.#####.#.###########.#";
"#...#.....#.#.#...#.#.....#.#...#...#.#.....#.#...#.#...#.#...#.#.#...#...#.......#.#.....#.......#.....#.#...#.#...#.......#.#.......#...#.#";
"#########.#.#.#.#.#.#.###.#.#.#####.#.#.#.###.#.###.#####.#.#.#.#.#######.#######.###.#####.#####.#####.#.#.###.#.###.###.###.#.#######.#.###";
"#.......#.#.#...#.#...#.#...#.#...#.#.#.#.#...#.#...#...#.#...#.#.#.....#.#...#.....#.#.....#.......#...#.#.#...#.#...#...#...#.#.....#.#...#";
"#.#####.###.#####.###.#.###.#.#.#.###.###.#.###.#.###.#.#####.#.#.#.###.#.#.#.#.###.#.#.###.#######.#.###.###.#.#.#.###.###.###.#.###.#.###.#";
"#.#...#.......#...#.....#...#.#.#...#...#.#.....#.#...#.#...#.#.#...#...#.#.#...#.....#.#...#...#.#.#.#...#...#.#.#.#.....#...#.#...#.#...#.#";
"#.#.#.#######.#.###.###.#.###.#.###.###.#.###.#.#.#.###.#.#.#.#.#####.###.#.#####.#####.#.#.#.#.#.#.#.#.###.###.#.#.#.#######.#.###.#.###.#.#";
"#...#...#...#.#.....#...#...#...#.#...#.#.....#.#...#.#.#.#...#...#.#.#...#.#.........#...#...#.#.....#.#.....#.#.#.#.#.#.....#...#.#.#...#.#";
"#.#####.###.#.#####.#######.#####.#.###.#.#.#.#.#####.#.#.###.###.#.#.#.###.#.#####.#.#########.#####.#.#.#.#.###.#.#.#.#.###.#####.#.#.###.#";
"#.....#...#.......#.#.....#.......#...#...#.#.#.#.........#.#...#.#.#.#...#.#...#...#...#.#.....#...#...#.#.#.....#.#.#.#.#...#.....#...#...#";
"#########.###.#####.#.###.#.#.###.###.#####.#.#.#########.#.###.#.#.#.###.#.###.#.#####.#.#.#####.#.###.#.#.#######.#.#.#.#.###.#########.###";
"#.......#...#.#...#...#...#.#.#...#.....#...#.#.......#...#.....#.#...#.#...#...#.#.......#.......#...#.#.#.........#...#.#...#.#...#...#...#";
"#.#####.###.###.#.#.###.###.#.#.###.#.###.###.#######.#.#.#.#####.#.###.#.###.###.#######.###########.#.#.#.#########.###.###.#.###.#.#.###.#";
"#.#...#.#...#...#.....#...#...#.#.#.#.....#.#.#...#...#.#...#.....#...#.....#...#...#...#.#.....#...#...#...#.#.......#...#...#...#.#.#.....#";
"#.#.#.#.#.###.#######.###.###.#.#.#.###.###.#.#.#.###.#####.#.#.#####.#.###.###.###.#.#.#.#.###.###.#########.#.#######.#########.#.#.#######";
"#.#.#.#.#.....#.......#...#.....#.#...#.#...#...#...#.....#.#.#.....#.....#.#.....#...#.#...#...#...#...#.....#.#.....#...#.........#.......#";
"#.#.###.#######.###.###.#.#.#####.###.#.###.#######.#####.###.#.#.###.#.#.###.#####.###.#####.#.#.###.#.#.#.###.###.#.###.#.#######.#####.#.#";
"#.#...#.#.....#...#.#...#.#.#.......#.#.....#.#.....#...#.#...#.#.....#.#.#...#...#.#...#.....#...#...#...#.........#...#.#.#.#.....#...#.#.#";
"#.###.#.#.#.#.###.###.#####.#.#.#.###.#####.#.#.#####.#.#.#.###.#.#.###.#.#.###.#.###.###.#######.#.###############.#.#.#.#.#.#.###.#.#.###.#";
"#...#.....#.........#.......#.#.#.#...........#.....#.#.#...#.....#.#...#.....#.#...#.#...#...#...#.#...#.....#...#.....#.....#...#.#.#.#...#";
"#.#.#.#####.###.###.#########.#.###.#########.#####.#.#.#####.###.#.###########.###.#.#.#.#.#.#.###.#.#.#.###.#.#.###.###########.#.#.#.#.###";
"#.#.#.#...#...#...#.........#.#...#...........#...#.....#.....#.#.#.#...........#.#.#...#...#...#...#.#.#.#...#.#.#...#.........#.#...#.#...#";
"#.#.###.#.#.#.###.###.#.###.#####.#########.#.###.#####.#.###.#.#.#.#.###########.#.#.#.#####.#.#.###.#.#.#####.#.###.#.#######.#.#.###.#.#.#";
"#.#.....#.#.#...#...#.#...#...#.....#.....#...........#.#.#.....#.....#...........#.#.#.........#.....#...#.....#...#.#...#.....#.....#.#.#.#";
"#########.#.###.###.###.#.###.#.###.###.###############.#.#.#####################.#.###.###.###.#.#.#####.#.#######.#####.###.#####.#.#.###.#";
"#...#...#...#...#.#.....#.....#.#.#.....#...#...........#.#...#.....#.....#.......#.......#.#.....#.#.....#.#.....#.....#...#.........#...#.#";
"#.#.#.#.#.#.#.###.#######.#####.#.#####.#.#.#.#.#########.###.#.###.#.###.#.#####.#######.###.###.#.#.#####.#.###.#####.###.#.#####.#.###.#.#";
"#.#.#.#.#.....#...#.....#.....#.....#.....#...#.....#.....#...#.#.#.#...#.#.#...#.......#...#...#...#...#...#...#.#...#...#.#.....#.....#.#.#";
"#.#.#.#.#.#.###.#.###.#######.#.#.#.#.###.#######.#.#####.#.###.#.#.#.#.#.#.#.#.#######.###.###.#######.#.#######.#.#.###.#.###.#.#.#.###.#.#";
"#.#...#...#.....#...#.......#.#.#.#.#.#.#.....#...#.#.....#...#...#.....#.#...#.#...#.....#...#.........#.......#...#...........#...#...#.#.#";
"#.#######.#.###.###.#######.#.#.#.###.#.#####.#.###.#.#####.###.###.#####.#.###.#.#.#.#######.#.###############.#########.#######.#.#.#.#.#.#";
"#...#...#.....#.#.#.........#...#.#...#.....#...#...#.#.....#...#.......#...#...#.#.#.#.#.....#...............#.........#.#.....#.#...#.#...#";
"#.#.#.###.#.#.#.#.#########.#####.#.#####.#.#####.###.#.#####.###.#####.###.#.###.#.#.#.#.#####.###.#.#####.###.#######.#.#.###.###.#.#.#.#.#";
"#.#.#.#...#.#.#.#.........#...#.....#.....#.#.#...#.........#.#.#.....#.....#.....#.....#.....#.....#.....#.#...............#.#.....#.#...#.#";
"#.#.#.#.#.#.#.#.#######.#.###.#.#####.#####.#.#.###########.#.#.#####.#####.#.#########.#.###.#.#.###.###.###.###############.#####.#.###.#.#";
"#.#.#.#...#.#...#.....#.#.....#.#...#...#...#.#.#.........#.#.......#.#...#.........#.#.....#...#.......#.#...#.......#.........#...#...#...#";
"###.#.###.#.#.###.###.#########.#.###.#.###.#.#.#.#######.###.#######.#.#.#.#######.#.#.#.#####.#######.#.#.###.#####.#.#####.###.###.#.###.#";
"#...#...#.#.#.#.....#.....#...#.#.#...#...#.#.#...#.....#.....#.......#.#.#.#.....#.#.#...#...#.#.....#.#.#.#...#...#.#.#...#.#...#.....#.#.#";
"#.###.###.#.###.#.#######.#.#.#.#.#.#####.#.#.#######.#########.#.#######.#.#.###.#.#.#.###.#.#.#.#.#.#.#.#.#.###.###.#.#.#.#.#.#####.###.#.#";
"#...#.....#.....#.#.......#.#...#.#...#...#.........#.#.......#.#.#.....#.#...#...#.#.....#.#...#...#.#...#.#.#...#...#.#.#.#...#.....#...#.#";
"#.#.#####.#####.#.#.#######.#####.###.#.###########.#.#.#####.#.###.###.#.###.#.#.#.#.#####.#####.###.###.#.#.###.#.###.#.#.#####.###.#.###.#";
"#.#.....#.........#.......#...#.#...#.#.......#.#...#.#...#.....#...#.#.#...#...#.#.#.#...#.#...#.#.....#.#.......#...#...#.#.#...#.....#...#";
"#.#####.#.###.#.#####.###.###.#.#.#.#.#######.#.#.###.###.###.###.###.#.#.#.#####.#.###.#.#.#.#.#.#####.#.#######.###.#####.#.#.#.###.#.#.###";
"#.#.....#...#.#.#...#...#.#...#...#.#.#.......#.#.#.....#...#.#...#...#.#.#...#.....#...#...#.#...#...#.#.#.....#...#...#...#...#...#.#.#...#";
"#.#.#####.#.#.###.#.###.#.#.#######.#.#.#######.#.#.###.###.###.###.#####.#####.###.#.#######.#####.#.###.#.#.#.#.#.###.#.#####.###.#.#####.#";
"#.#...#...#.#.....#.#...#.#.......#...#.#.#.......#.#.....#...#...#.......#.......#.#.#...#.#.......#.....#...#.#...#...#.....#...#.#.....#.#";
"#####.#####.#######.###.#.#######.#####.#.#.#######.#.#.#.###.###.###.###.#.#####.#.#.#.#.#.#.#########.#.###.#.#####.#######.#####.#.###.#.#";
"#...........#.....#.......#...#.......#.#.#.#...........#.......#...#.#...#.#...#.#...#.#...#...#.......#...#.......#.....#.....#...#...#...#";
"#.#.#.#.#.#####.#.#######.#.#.#.###.#.#.#.#.###########.#.#.###.###.#.#####.#.#.#.#####.#######.#.#####.#.###.#####.#####.#####.#.###.#.#####";
"#.#.#.#.#.....#.#...#.......#.#.#...#.#.#.#.#.......#...#.#...#.....#.......#.#.#.......#...#...#.#.....#.#...#.....#.....#...............#.#";
"#.#.###.###.#.#.#.#.#.#######.#.###.#.#.#.#.#.#####.#.###.#.#.#######.#######.#.#.#######.#.#.###.#####.#.#.###.#####.#####.#.#####.#.###.#.#";
"#.#...#...#.#.#.#.....#...#...#.....#...#.#...#...#...#.#.#.#...#...#...#.....#.#...#.....#.#.#...#.....#.#...#.............#.#.....#.#...#.#";
"#.###.###.#.#.#####.###.#.###############.#####.#######.#.#####.#.#.###.#.###.#.#.#.#.#.###.#.#.###.###.#.###.#.#######.#####.#.#####.#.###.#";
"#.#.#.#...#.#.#...#.#...#...............#.....#...........#.....#.#.....#.#...#.#.#.#...#...#.#...#.#.#.......#...#.....#.....#.#.....#...#.#";
"#.#.#.#.#####.#.#.###.#######.#.#######.#.###.#.###########.#####.#####.###.###.#.#.###.#.#.#.###.#.#.#####.#####.#.###.#.#####.#####.###.#.#";
"#.#.#...#.....#.#...#...#.....#.#.....#.#...#.#.......#.....#.....#.....#...#...#...#.#.#.#.#.#.#...#...#...#...#...#.#.#.#...#.........#.#.#";
"#.#.#####.#.###.###.###.#.#####.#.###.#####.#.#######.###.###.#####.###.#.###.###.#.#.#.#.#.#.#.#####.###.#.#.#######.#.#.#.###.#####.###.#.#";
"#.#.......#.#...#...#...#.....#.#...#.......#...#.......#...#...#...#.#...#.#.#...#...#.#.#.#.#.......#...................#...#...#.#.....#.#";
"#.#.#.#######.###.###.#######.#####.#########.#.###.###.###.###.#.###.#####.#.#.#######.#.#.#.#####.#.#.###.#########.#####.#.###.#.#.#####.#";
"#.#.#.#.....#.#.#...#.....#.#.....#.#.....#.........#...#.....#.#.#.....#.....#.........#...#...#...#.#.#...........#...#...#...............#";
"#.#.###.###.#.#.###.#####.#.#####.#.#.#####.#######.#.###.#####.#.#.#.###.#####.#########.#####.#.###.#.###########.#.#.#####.#############.#";
"#.#...#...#.#.#...#...#.#.#.#.....#.#.....#.......#.#...#.....#.#.........#...#.......#.#.......#.#.#.#.......#...#.#.#...................#.#";
"#.###.###.#.#.#.###.#.#.#.#.#.#####.#.###.#######.#####.#.###.#.#.#.#######.#.###.###.#.#########.#.#.#######.#.#.###.#####.#####.#######.#.#";
"#...#.....#.......#.#.#.#.#.#.......#...#.....#...#.....#...#.#.#.#.#.......#.......#.#...........#.#.#.#...#...#.....#...#.#...........#.#.#";
"#.#.#.#####.#.###.#.#.#.#.#.#####.#########.#.#.###.#.#######.#.#.#.#########.#######.###########.#.#.#.#.#.#######.#.###.#.#.###########.#.#";
"#.#.#.#.....#...#.#.#...#.#.............#.....#.....#.......#.#...#...#.....#.........#.......#...#.#.#.#.#...........#.....#.....#.......#.#";
"###.#.#.#.#.###.#.#.#####.###.#########.#.###########.###.#.#.#######.#.#.#.#.#########.#####.#.###.#.#.#.#.#########.#.###.#####.#.#######.#";
"#...#.#.#.#.....#.#.....#...#.#.......#...#.......#.......#.#.#.....#...#.#.#.#...#.....#.......#.#...#...#.........#.#.#.....#...#.....#.#.#";
"#.#####.#.#.#####.#####.###.#.#.#####.###.#.#.#.#.###.#####.#.#.#.#.#####.#.#.#.###.#.###########.#.#######.#######.#.#.#.#####.#######.#.#.#";
"#.#...#.#.#...........#...#.#.....#...#...#.#...#...#.#...#.#...#.#.#.....#.#.#.....#...........#.........#.#.......#.#.#.#.....#.#...#.#.#.#";
"#.#.#.#.###.#####.#####.#.#.#.###.#.#####.#.###.###.#.#.###.#.###.#.###.###.#.###.#.###########.#######.#.###.#######.#.#.#.#####.#.#.#.#.#.#";
"#...#.#...#.......#.....#.#...#...#.....#.#.......#.#.#...........#.......#.#...#...#.........#.....#...#.....#.....#...#...#.....#.#...#.#.#";
"#.###.###.#.#####.#.#####.###.#.###.#.#.#####.###.#.#.###.#########.#.###.#.###.#.#.#####.###.#####.#.#.#######.###.###.#####.#####.#####.#.#";
"#.#...#...#.........#.....#...#.#...#.#.........#.#.#...#.#.....#...#.....#...#...#.....#.#...#.....#.#.#.......#.....#.#...#.....#.....#...#";
"#.#.###.###.#.#####.#####.#.#####.#.#.###########.#.#.#.#.#.###.#.#.#########.###.#####.#.#.###.###.#.#.#.#.#####.###.#.#.#.#####.#####.#.###";
"#.............#...#.....#.#.#.....#.#.#...#.......#.......#.#.#...#...#.......#.....#.....#...#.....#.#.#.#.....#.#...#.#.#.....#.....#.....#";
"#.###.#.###.###.#.#.#.#.###.###.###.###.#.#.###############.#.###.###.#.###########.###############.###.#.#.###.#.###.#.#.###.#.###.#.###.#.#";
"#.#...#...#.#...#...#.#.....#...#.#...#.#.#.#.........#...#.....#...#...#.......#...#...............#...#.#.#.#.#...#.#.#...#.....#.#...#...#";
"#.#.#.###.#.#.#####.#.#######.###.###.#.#.#.#.#######.#.#.#####.#.#.#####.#####.#.###.###############.###.#.#.#.###.###.#.#.#####.#.###.#.#.#";
"#.#.#...#.#.#.#...#.#...#.....#.....#.#.#...#.#.....#.#.#...#...#.#.........#.#.#.....#...........#...#...#.#...#...#...#.#.#.............#.#";
"#.#.#.#.#.#.#.###.#.###.#.#####.#.#.#.#.###.#.#.#.###.#.###.#.###.###.#####.#.#.#####.#.#########.#.###.#.#.#.###.###.###.#.#.#.#########.###";
"#.#.#...#.#.#...#.#...#...#.......#.#.....#...#.#.#...#...#...#...#...#.#...#.....#...#.#.......#.#.....#...#...#.....#...#...#.#.......#...#";
"###.#.###.#.###.#.###.#####.#######.#.###.#.###.#.#.#####.#####.###.###.#.#.#####.#####.#.#####.#.#.#####.#.###.#########.#.###.#.#####.#.#.#";
"#...#.....#...#.#...#.....#.#.....#.......#...#.#.#.....#...#.#...#...#.#.....#.#.......#.#.#...#.#...#...#.#.#.#.......#.#...#.#.#...#.#.#.#";
"#.###.#.###.###.#.#######.###.###.#####.#####.#.#.#####.###.#.#.#.###.#.#####.#.#########.#.#.###.###.#####.#.#.#####.#.###.#.#.#.###.#.#.#.#";
"#.#...#.....#...#.....#.#.....#.#.....#.#.....#.#.....#...#.#...#...#.#...#...#.........#.#.#...#...#.......#.........#...#.#.............#.#";
"#.#.#.#######.#####.#.#.#######.#####.###.#####.#.###.#.###.#####.#.#.#.#.#.###.#######.#.#.###.###.#####.#######.#######.#.#.#.#.#.#####.#.#";
"#...#.........#...#.#...#...........#.....#.....#.#.#.....#.#...#.#.....#.#.#.#.#.........#...#...#...#...#.........#...#...#...#.#.#.....#.#";
"#.#############.#.#.###.#.#####.#.#######.#######.#.#.###.#.#.#.#####.###.#.#.#.#.#####.#.#.#####.###.#.###.#######.#.#.#########.#.#.#####.#";
"#.#.......#.....#...#...#.#.....#.#...............#...#...#...#.....#.#...#.#.#.#...#...#.#.#...#.....#.#...#.........#...........#.#.#.....#";
"#.###.###.#.#########.###.#.#######.#######.#####.#####.###########.#.#.#.#.#.#.###.#####.#.#.#.#######.#.#####.###################.#.#.#####";
"#.#...#.#...#.......#.#.#.#.....#...#...#.#...#...#...#...#.........#.......#.#...#...#...#...#.....#...#.....#...#.....#.........#.#.#.....#";
"#.#.###.#####.#######.#.#.#####.#.###.#.#.#.#.#.###.#.###.#.#.#########.#.###.###.###.#.#########.#.#.#######.#####.###.#.#.###.#.#.#.#.###.#";
"#...#.........#.......#...#.....#.....#...#.#.#.#.#.#.....#...#...#.....#...#...#.#...#.#.........#.#.#.#...#.......#.#...#.#...#...#.#...#.#";
"#####.###.#####.#######.###.#.###########.#.#.#.#.#.#####.###.#.#.#.#####.#.#.#.#.#.#.#.#.#########.#.#.#.#.#.#######.#####.#.#####.#.###.#.#";
"#.........#...#.#.....#.#.#.#.#...........#.#...#.#.....#...#.#...#.#.....#.#.#.#.#.#.#.#.#.......#.....#.#.#...#.......#...#.....#.#...#.#.#";
"#.#.###.###.#.#.#.###.#.#.#.###.###########.#.###.#####.#.###.#.#.###.#.###.#.#.#.#.###.#.#.#####.#####.#.#.###.#.###.###.###.###.#.#.#.###.#";
"#...#.#.#...#...#...#.#...#...#.......#.#...#...#...#.#.......#.#...#.#.......#...#...#.#.#...#.#.....#.#.#...#...........#.....#.#...#...#.#";
"#.###.#.#.#######.#.#.#######.#######.#.#.#####.#.#.#.#########.###.#.#.#.###########.#.#.###.#.#####.#.#.###.#####.###.###.#.###.###.###.#.#";
"#.#...#...#.......#...#.....#.......#...#.....#...#.............#.#.#...#.#.#.....#...#.#...#...#...#...#.#...#...#.#.#...#.#.....#.......#.#";
"#.#.#.#####.#.#######.#.###.#.#####.#.#.#####.#########.#.#####.#.#.###.#.#.#.###.#.#.#.#.#.###.#.#.#####.#.###.#.#.#.###.#.#.#####.#.#####.#";
"#.#.#.....#.#.......#...#...#...............#.......#.#.#.#...#.#...#...#...#.#.#...#.#.#.#.......#...#...#...#.#.#.#...#.#.#.....#.#...#...#";
"#.###.###.###.#####.###.#.###.#####.#.###.#.#######.#.#.###.#.#.#.###.#.#####.#.#.#####.#########.#####.#####.#.#.#.###.#.###.###.#.#.###.#.#";
"#.#...#.#...#.....#...........................#.....#.......#...#.#.......#...#...#.....#.......#.#...#.#...#.#.#.......#.......#...#.....#.#";
"#.#.###.###.#.#######.#.###.###.#.###.#.#.#.###.#################.#####.#.#.###.###.#####.#####.###.#.#.#.###.###############.#.###.#.#####.#";
"#.#...#...#.....#...#.#.#...#...#...#...................#.......#.#...#.#.#.#...#...#.....#.........................#.......#.#...#.........#";
"#.###.###.#####.#.#.#.#.#.###.#####.#.###.###.#########.#.#####.#.#.#.#.#.#.#####.###.#####.#.#.#.###.#.#.#.#######.#.#####.#.###.###.#####.#";
"#...#...#.....#.#.#...#.#.#...#.....#.#.......#.........#...#...#...#...#.#.......#...#.#...#.#.#.#.#...#.#.......................#.........#";
"###.###.#.#.###.#.#####.#.#.#.#.#####.#.#####.#.###########.#.#.#######.#.#.#########.#.#.###.#.#.#.#####.#.#.###.#.#.#.###.#.###.#.#########";
"#.#.#...#.#.#...#.....#.#.#.#.........................#...#.#.#.....#...#.#.#.........#...#.#.#...#...#...#.#...#.#...#.....#.#...#.....#...#";
"#.#.#.###.#.#.###.###.#.#.###.#####.#.###.#.#.###.#.#.#.#.#.#.#######.#.#.#.###.#######.###.#.#####.#.#.###.###.#.#####.#######.#######.#.#.#";
"#S....#...#...........#.......#...........#...#.....#...#...#.............#.....#...........#.......#.....#.....#...............#.........#.#";
"#############################################################################################################################################"
];

startPos = find(data == 'S');
endPos = find(data == 'E');
locations = find(data ~= '#');
costs = Inf*ones(1, numel(locations));
costs(locations == startPos) = 0;
orientations = Inf*ones(1, numel(locations));
orientations(locations == startPos) = 'R';
unvisitedLocations = locations;

while(~(isempty(unvisitedLocations)))
    % find the unvisited location with the lowest cost
    location = unvisitedLocations(1);
    cost = costs(locations == location);

    for ii = 2:numel(unvisitedLocations)
        nextLocation = unvisitedLocations(ii);
        nextCost = costs(locations == nextLocation);

        if(nextCost < cost)
            location = nextLocation;
            cost = nextCost;
        end
    end

    orientation = orientations(locations == location);

    % remove this location from the unvisited locations
    unvisitedLocations(unvisitedLocations == location) = [];

    % compute the costs to reach the adjacent locations
    upIdx = location - 1;
    upCost = Inf;

    if(data(upIdx) ~= '#')
        if(orientation == 'U')
            upCost = cost + 1;
        end

        if(orientation == 'L')
            upCost = cost + 1001;
        end

        if(orientation == 'R')
            upCost = cost + 1001;
        end

        if(orientation == 'D')
            upCost = cost + 2001;
        end

        costs(locations == upIdx) = min(costs(locations == upIdx), upCost);
        orientations(locations == upIdx) = 'U';
    end

    downIdx = location + 1;
    downCost = Inf;

    if(data(downIdx) ~= '#')
        if(orientation == 'D')
            downCost = cost + 1;
        end

        if(orientation == 'L')
            downCost = cost + 1001;
        end

        if(orientation == 'R')
            downCost = cost + 1001;
        end

        if(orientation == 'U')
            downCost = cost + 2001;
        end

        costs(locations == downIdx) = min(costs(locations == downIdx), downCost);
        orientations(locations == downIdx) = 'D';
    end

    leftIdx = location - rows(data);
    leftCost = Inf;

    if(data(leftIdx) ~= '#')
        if(orientation == 'L')
            leftCost = cost + 1;
        end

        if(orientation == 'U')
            leftCost = cost + 1001;
        end

        if(orientation == 'D')
            leftCost = cost + 1001;
        end

        if(orientation == 'R')
            leftCost = cost + 2001;
        end

        costs(locations == leftIdx) = min(costs(locations == leftIdx), leftCost);
        orientations(locations == leftIdx) = 'L';
    end

    rightIdx = location + rows(data);
    rightCost = Inf;

    if(data(rightIdx) ~= '#')
        if(orientation == 'R')
            rightCost = cost + 1;
        end

        if(orientation == 'U')
            rightCost = cost + 1001;
        end

        if(orientation == 'D')
            rightCost = cost + 1001;
        end

        if(orientation == 'L')
            rightCost = cost + 2001;
        end

        costs(locations == rightIdx) = min(costs(locations == rightIdx), rightCost);
        orientations(locations == rightIdx) = 'R';
    end
end

costs(locations == endPos)
% assert(109516 == costs(locations == endPos));

global allRoutes;
allRoutes = [];
max_recursion_depth(512);

function costToRotate = getCostToRotate(currentOrientation, desiredOrientation)
    costToRotate = 0;

    if(currentOrientation == desiredOrientation)
        return;
    end

    if(desiredOrientation == 0)
        if(currentOrientation == 1)
            costToRotate = 2000;
        end

        if(currentOrientation == 2)
            costToRotate = 1000;
        end

        if(currentOrientation == 3)
            costToRotate = 1000;
        end
    end

    if(desiredOrientation == 1)
        if(currentOrientation == 0)
            costToRotate = 2000;
        end

        if(currentOrientation == 2)
            costToRotate = 1000;
        end

        if(currentOrientation == 3)
            costToRotate = 1000;
        end
    end

    if(desiredOrientation == 2)
        if(currentOrientation == 0)
            costToRotate = 1000;
        end

        if(currentOrientation == 1)
            costToRotate = 1000;
        end

        if(currentOrientation == 3)
            costToRotate = 2000;
        end
    end

    if(desiredOrientation == 3)
        if(currentOrientation == 0)
            costToRotate = 1000;
        end

        if(currentOrientation == 1)
            costToRotate = 1000;
        end

        if(currentOrientation == 2)
            costToRotate = 2000;
        end
    end
end

function findRoute(data, location, endPos, route, locations, costs, totalCost, orientation)
    global allRoutes;
    route(end + 1) = location;

    if(totalCost > costs(locations == endPos))
        return;
    end

    if(location == endPos)
        disp("Found")
        allRoutes = [allRoutes, route];
        return;
    end

    localCosts = [];

    upIdx = location - 1;

    if(data(upIdx) ~= '#') && (~(any(route == upIdx)))
        costToMove = 1 + getCostToRotate(orientation, 0);
        localCosts = [localCosts; [costToMove, 0]];
    end

    downIdx = location + 1;

    if(data(downIdx) ~= '#') && (~(any(route == downIdx)))
        costToMove = 1 + getCostToRotate(orientation, 1);
        localCosts = [localCosts; [costToMove, 1]];
    end

    leftIdx = location - rows(data);

    if(data(leftIdx) ~= '#') && (~(any(route == leftIdx)))
        costToMove = 1 + getCostToRotate(orientation, 2);
        localCosts = [localCosts; [costToMove, 2]];
    end

    rightIdx = location + rows(data);

    if(data(rightIdx) ~= '#') && (~(any(route == rightIdx)))
        costToMove = 1 + getCostToRotate(orientation, 3);
        localCosts = [localCosts; [costToMove, 3]];
    end

    localCosts = sortrows(localCosts);

    for ii = 1:rows(localCosts)
        direction = localCosts(ii, 2);

        if(direction == 0)
            findRoute(data, upIdx, endPos, route, locations, costs, totalCost + localCosts(ii, 1), 0);
        end

        if(direction == 1)
            findRoute(data, downIdx, endPos, route, locations, costs, totalCost + localCosts(ii, 1), 1);
        end

        if(direction == 2)
            findRoute(data, leftIdx, endPos, route, locations, costs, totalCost + localCosts(ii, 1), 2);
        end

        if(direction == 3)
            findRoute(data, rightIdx, endPos, route, locations, costs, totalCost + localCosts(ii, 1), 3);
        end
    end
end

findRoute(data, startPos, endPos, [], locations, costs, 0, 3);
numel(unique(allRoutes))
% assert(568 == numel(unique(allRoutes)))
